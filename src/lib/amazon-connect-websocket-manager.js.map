{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/log.js","webpack:///./src/retryProvider.js","webpack:///./src/webSocketManager.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/assertThisInitialized.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","LOGS_DESTINATION","LOG_MESSAGES","ROUTE_KEY","CONN_STATE","Utils","premise","message","Error","assertTrue","undefined","sprintf","Array","isArray","apply","wsRegex","RegExp","validWSUrl","wsUrl","test","getSubscriptionResponse","routeKey","isSuccess","topicList","topic","content","status","topics","assertIsObject","isObject","addJitter","base","maxJitter","Math","min","sign","random","floor","isNetworkOnline","navigator","onLine","isNetworkFailure","reason","_debug","type","Logger","data","DEFAULT_PREFIX","LogLevel","DEBUG","INFO","WARN","ERROR","ADVANCED_LOG","LogManagerImpl","logMetaData","this","updateLoggerConfig","level","logStatement","hasClientLogger","levelStringValue","getLogLevelByValue","_clientLogger","debug","info","warn","error","_advancedLogWriter","_level","options","prefix","setLogMetaData","console","LoggerWrapperImpl","inputConfig","config","advancedLogWriter","customizedLogger","useClientLogger","logger","selectLogger","_logsDestination","useDefaultLogger","createConsoleLogger","LoggerWrapper","logManagerInstance","logManager","args","_log","isLevelEnabled","writeToClientLogger","_shouldLog","_convertToSingleStatement","_writeToClientLogger","date","Date","now","toISOString","index","arg","_convertToString","isString","isFunction","toString","toStringResult","JSON","stringify","window","concat","RetryProvider","executor","defaultRetry","numAttempts","hasActiveReconnection","setTimeout","_execute","_getDelay","calculatedDelay","pow","WebSocketManager","getLogger","online","webSocket","primary","secondary","reconnectConfig","reconnectWebSocket","websocketInitFailed","exponentialBackOffTime","exponentialTimeoutHandle","lifeTimeTimeoutHandle","webSocketInitCheckerTimeoutId","connState","metrics","connectWebSocketRetryCount","connectionAttemptStartTime","noOpenConnectionsTimestamp","heartbeatConfig","pendingResponse","intervalHandle","heartbeatPingConfig","callbacks","initFailure","Set","getWebSocketTransport","subscriptionUpdate","subscriptionFailure","Map","allMessage","connectionGain","connectionLost","connectionOpen","connectionClose","webSocketConfig","connConfig","promiseHandle","promiseCompleted","topicSubscription","subscribed","pending","subscriptionHistory","topicSubscriptionConfig","responseCheckIntervalId","requestCompleted","reSubscribeIntervalId","consecutiveFailedSubscribeAttempts","consecutiveNoResponseRequest","reconnectionClient","getWebSocketConnConfig","invalidSendMessageRouteKeys","networkConnectivityChecker","setInterval","advancedLog","sendInternalLogToServer","ws","getDefaultWebSocket","isWebSocketState","WebSocket","CLOSING","CLOSED","invokeCallbacks","response","forEach","callback","getWebSocketStates","readyState","CONNECTING","OPEN","printWebSocketState","event","webSocketStateCode","isWebSocketOpen","isWebSocketClosed","isDefaultWebSocketOpen","sendHeartBeat","clearInterval","send","createWebSocketPayload","resetWebSocketState","clearTimeout","resetSubscriptions","resetMetrics","webSocketOnOpen","connected","connectionEstablishedTime","timeToConnect","timeWithoutConnection","openTimestamp","size","closeSpecificWebSocket","add","clear","subscribePendingTopics","webSocketLifetimeTimeout","webSocketTransport","transportLifeTimeInSeconds","webSocketOnError","getIsConnected","retry","webSocketOnMessage","parse","topicName","has","from","close","closeWebSocket","retryWebSocketInitialization","waitTime","urlConnValidTime","initWebSocket","terminateWebSocketManager","validWebSocketConnConfig","isNonEmptyString","url","then","webSocketConnectionFailed","getNewWebSocket","addEventListener","closeTimestamp","connectionDuration","code","webSocketOnClose","logEntry","init","transportHandle","onInitFailure","cb","onConnectionOpen","onConnectionClose","onConnectionGain","onConnectionLost","onSubscriptionUpdate","onSubscriptionFailure","onMessage","assertNotNull","set","onAllMessage","subscribeTopics","assertIsList","sendMessage","payload","WebSocketManagerObject","hasLogMetaData","setGlobalConfig","loggerConfig","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sprintf_format","sprintf_parse","arguments","vsprintf","fmt","argv","parse_tree","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","Function","isNaN","parseInt","String","fromCharCode","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_cache","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","subClass","superClass","assertThisInitialized","self","global","connect","g","e","_setPrototypeOf","ReferenceError"],"mappings":"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","file":"amazon-connect-websocket-manager.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\nexport const LOGS_DESTINATION = {\n  NULL: \"NULL\",\n  CLIENT_LOGGER: \"CLIENT_LOGGER\",\n  DEBUG: \"DEBUG\"\n};\n\nexport const MIN_WEBSOCKET_LIFETIME_MS = 300000;\nexport const HEARTBEAT_INTERVAL_MS = 10000;\nexport const WEBSOCKET_URL_VALID_TIME_MS = 85000;\nexport const TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS = 500;\nexport const MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS = 5;\nexport const MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS = 1000;\nexport const MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE = 3;\nexport const NETWORK_CONN_CHECK_INTERVAL_MS = 250;\nexport const WEBSOCKET_REINIT_JITTER = 0.3;\nexport const WEBSOCKET_RETRY_RATE_MS = 2000;\nexport const MAX_WEBSOCKET_RETRY_RATE_MS = 30000;\n\nexport const NETWORK_FAILURE = 'NetworkingError';\n\nexport const LOG_MESSAGES = {\n  DEFAULT_PREFIX: \"AMZ_WEB_SOCKET_MANAGER:\",\n  NETWORK_OFFLINE: \"Network offline\",\n  NETWORK_ONLINE: \"Network online, connecting to WebSocket server\",\n  NETWORK_OFFLINE_WARNING: \"Network offline, ignoring this getWebSocketConnConfig request\",\n  NO_HEARTBEAT: \"Heartbeat response not received\",\n  NO_HEARTBEAT_PING: \"aws/ping Heartbeat response not received\",\n  HEARTBEAT_RECEIVED: \"Heartbeat response received\",\n  HEARTBEAT_RECEIVED_PING: \"Heartbeat aws/ping response received\",\n  SENDING_HEARTBEAT: \"Sending heartbeat\",\n  SENDING_HEARTBEAT_PING: \"Sending aws/ping heartbeat\",\n  FAILED_HEARTBEAT: \"Failed to send heartbeat since WebSocket is not open\",\n  FAILED_HEARTBEAT_PING: \"Failed to send aws/ping heartbeat since WebSocket is not open\",\n  WEBSOCKET_CONNECTION_ESTABLISHED: \"WebSocket connection established!\",\n  WEBSOCKET_CONNECTION_CLOSED: \"WebSocket connection is closed\",\n  WEBSOCKET_CONNECTION_ERROR: \"WebSocketManager Error, error_event: \",\n  WEBSOCKET_REINITIALIZATION: \"Scheduling WebSocket reinitialization, after delay \",\n  WEBSOCKET_REINITIALIZATION_TIMEOUT: \"WebSocket URL cannot be used to establish connection\",\n  WEBSOCKET_INITIALIZATION_FAILED: \"WebSocket Initialization failed - Terminating and cleaning subscriptions\",\n  WEBSOCKET_TERMINATED: \"Terminating WebSocket Manager\",\n  WEBSOCKET_NEW_CONNECTION: \"Fetching new WebSocket connection configuration\",\n  WEBSOCKET_CONNECTION_SUCCESS: \"Successfully fetched webSocket connection configuration\",\n  WEBSOCKET_CONNECTION_FAILURE: \"Failed to fetch webSocket connection configuration\",\n  WEBSOCKET_CONNECTION_RETRY: \"Retrying fetching new WebSocket connection configuration\",\n  WEBSOCKET_INIT: \"Initializing Websocket Manager\",\n  WEBSOCKET_INIT_FAILURE: \"Initializing Websocket Manager Failure callback registered\",\n  WEBSOCKET_CONNECTION_OPEN: \"Websocket connection open callback registered\",\n  WEBSOCKET_CONNECTION_CLOSE: \"Websocket connection close callback registered\",\n  WEBSOCKET_CONNECTION_GAIN: \"Websocket connection gain callback registered\",\n  WEBSOCKET_CONNECTION_LOST: \"Websocket connection lost callback registered\",\n  WEBSOCKET_SUBSCRIPTION_FAILURE: \"Websocket subscription failure callback registered\",\n  WEBSOCKET_RESET: \"Reset Websocket state\",\n  WEBSOCKET_MESSAGE_ERROR: \"WebSocketManager Message Error\",\n  WEBSOCKET_MESSAGE_RECEIVED: \"Message received for topic \",\n  WEBSOCKET_MESSAGE_INVALID: \"Invalid incoming message\",\n  WEBSOCKET_MESSAGE_SUCCESS: \"WebsocketManager invoke callbacks for topic success \",\n};\n\nexport const ROUTE_KEY = {\n  SUBSCRIBE: \"aws/subscribe\",\n  UNSUBSCRIBE: \"aws/unsubscribe\",\n  HEARTBEAT: \"aws/heartbeat\",\n  PING: \"aws/ping\"\n};\n\nexport const CONN_STATE = {\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\"\n};\n","import { sprintf } from \"sprintf-js\";\nimport { NETWORK_FAILURE } from './constants';\n\nconst Utils = {};\n\n/**\n * Asserts that a premise is true.\n */\nUtils.assertTrue = function(premise, message) {\n  if (!premise) {\n    throw new Error(message);\n  }\n};\n\n/**\n * Asserts that a value is not null or undefined.\n */\nUtils.assertNotNull = function(value, name) {\n  Utils.assertTrue(\n    value !== null && typeof value !== undefined,\n    sprintf(\"%s must be provided\", name || \"A value\")\n  );\n  return value;\n};\n\nUtils.isNonEmptyString = function(value) {\n  return typeof value === \"string\" && value.length > 0;\n};\n\nUtils.assertIsList = function(value, key) {\n  if (!Array.isArray(value)) {\n    throw new Error(key + \" is not an array\");\n  }\n};\n\n/**\n * Determine if the given value is a callable function type.\n * Borrowed from Underscore.js.\n */\nUtils.isFunction = function(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n};\n\nUtils.isObject = function(value) {\n  return !(typeof value !== \"object\" || value === null);\n};\n\nUtils.isString = function(value) {\n  return typeof value === \"string\";\n};\n\nUtils.isNumber = function(value) {\n  return typeof value === \"number\";\n};\n\nconst wsRegex = new RegExp(\"^(wss://)\\\\w*\");\nUtils.validWSUrl = function (wsUrl) {\n  return wsRegex.test(wsUrl);\n};\n\nUtils.getSubscriptionResponse = (routeKey, isSuccess, topicList) => {\n  return {\n    topic: routeKey,\n    content : {\n      status: isSuccess ? \"success\" : \"failure\",\n      topics: topicList\n    }\n  };\n};\n\nUtils.assertIsObject = function(value, key) {\n  if (!Utils.isObject(value)) {\n    throw new Error(key + \" is not an object!\");\n  }\n};\n\nUtils.addJitter = function (base, maxJitter = 1) {\n  maxJitter = Math.min(maxJitter, 1.0);\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  return Math.floor(base + sign * base * Math.random() * maxJitter);\n};\n\nUtils.isNetworkOnline = () => navigator.onLine;\n\nUtils.isNetworkFailure = (reason) => {\n  if(reason._debug && reason._debug.type) {\n    return reason._debug.type === NETWORK_FAILURE;\n  }\n  return false;\n};\n\nexport default Utils;\n","import Utils from \"./utils\";\nimport { LOGS_DESTINATION, LOG_MESSAGES } from \"./constants\";\n\n/*eslint-disable no-unused-vars*/\nclass Logger {\n  debug(data) {}\n\n  info(data) {}\n\n  warn(data) {}\n\n  error(data) {}\n\n  advancedLog(data) {}\n}\n/*eslint-enable no-unused-vars*/\n\nconst DEFAULT_PREFIX = LOG_MESSAGES.DEFAULT_PREFIX;\nconst LogLevel = {\n  DEBUG: 10,\n  INFO: 20,\n  WARN: 30,\n  ERROR: 40,\n  ADVANCED_LOG: 50,\n};\n\nclass LogManagerImpl {\n  constructor(logMetaData) {\n    this.logMetaData = logMetaData;\n    this.updateLoggerConfig();\n  }\n\n  hasLogMetaData() {\n    return !!this.logMetaData;\n  }\n\n  writeToClientLogger(level, logStatement) {\n    if (!this.hasClientLogger()) {\n      return;\n    }\n\n    var levelStringValue = getLogLevelByValue(level);\n    switch (level) {\n      case LogLevel.DEBUG:\n        return this._clientLogger.debug(levelStringValue, logStatement, this.logMetaData) || logStatement;\n      case LogLevel.INFO:\n        return this._clientLogger.info(levelStringValue, logStatement, this.logMetaData) || logStatement;\n      case LogLevel.WARN:\n        return this._clientLogger.warn(levelStringValue, logStatement, this.logMetaData) || logStatement;\n      case LogLevel.ERROR:\n        return this._clientLogger.error(levelStringValue, logStatement, this.logMetaData) || logStatement;\n      case LogLevel.ADVANCED_LOG:\n        if(!this._advancedLogWriter) return '';\n        return this._clientLogger[this._advancedLogWriter](levelStringValue, logStatement, this.logMetaData) || logStatement;\n    }\n  }\n\n  isLevelEnabled(level) {\n    return level >= this._level;\n  }\n\n  hasClientLogger() {\n    return this._clientLogger !== null;\n  }\n\n  getLogger(options = {}) {\n    var prefix = options.prefix || DEFAULT_PREFIX;\n    if (options.logMetaData) {\n      this.setLogMetaData(options.logMetaData);\n    }\n    if (!this.logMetaData) {\n      console.info(\"*********Missing required option: WebSocketManager:logMetaData**********\");\n    }\n    return new LoggerWrapperImpl(this, { prefix, logMetaData: this.logMetaData, ...options });\n  }\n\n  setLogMetaData(logMetaData) {\n    this.logMetaData = logMetaData;\n  }\n\n  updateLoggerConfig(inputConfig) {\n    var config = inputConfig || {};\n    this._level = config.level || LogLevel.INFO;\n    //enabled advancedLogWriter\n    this._advancedLogWriter = \"warn\";\n    if (config.advancedLogWriter) {\n      this._advancedLogWriter = config.advancedLogWriter;\n    }\n\n    if(config.customizedLogger && typeof config.customizedLogger === \"object\") {\n      this.useClientLogger = true;\n    }\n    this._clientLogger = config.logger || this.selectLogger(config);\n\n    this._logsDestination = LOGS_DESTINATION.NULL;\n    if (config.debug) {\n      this._logsDestination = LOGS_DESTINATION.DEBUG;\n    }\n    if (config.logger) {\n      this._logsDestination = LOGS_DESTINATION.CLIENT_LOGGER;\n    }\n  }\n\n  selectLogger(config) {\n    if(config.customizedLogger && typeof config.customizedLogger === \"object\") {\n      return config.customizedLogger;\n    }\n    if(config.useDefaultLogger) {\n      return createConsoleLogger();\n    }\n    return null;\n  }\n}\n\nclass LoggerWrapper {\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n\n  advancedLog() {}\n}\n\nclass LoggerWrapperImpl extends LoggerWrapper {\n  constructor(logManagerInstance, options) {\n    super();\n    this.options = options || {};\n    this.prefix = options.prefix || DEFAULT_PREFIX;\n    this.logManager = logManagerInstance;\n  }\n\n  debug(...args) {\n    return this._log(LogLevel.DEBUG, args);\n  }\n\n  info(...args) {\n    return this._log(LogLevel.INFO, args);\n  }\n\n  warn(...args) {\n    return this._log(LogLevel.WARN, args);\n  }\n\n  error(...args) {\n    return this._log(LogLevel.ERROR, args);\n  }\n\n  advancedLog(...args) {\n    return this._log(LogLevel.ADVANCED_LOG, args);\n  }\n\n  _shouldLog(level) {\n    return this.logManager.hasClientLogger() && this.logManager.isLevelEnabled(level);\n  }\n\n  _writeToClientLogger(level, logStatement) {\n    return this.logManager.writeToClientLogger(level, logStatement);\n  }\n\n  _log(level, args) {\n    if (this._shouldLog(level)) {\n      var logStatement = this.logManager.useClientLogger ? args : this._convertToSingleStatement(args);\n      return this._writeToClientLogger(level, logStatement);\n    }\n  }\n\n  _convertToSingleStatement(args) {\n    var date = new Date(Date.now()).toISOString();\n    var logStatement = `[${date}]`;\n    if (this.prefix) {\n      logStatement += this.prefix + \" \";\n    }\n    if (this.options) {\n      this.options.prefix ? logStatement += \" \" + this.options.prefix + \":\" : logStatement += \"\";\n    }\n    for (var index = 0; index < args.length; index++) {\n      var arg = args[index];\n      logStatement += this._convertToString(arg) + \" \";\n    }\n    return logStatement;\n  }\n\n  _convertToString(arg) {\n    try {\n      if (!arg) {\n        return \"\";\n      }\n      if (Utils.isString(arg)) {\n        return arg;\n      }\n      if (Utils.isObject(arg) && Utils.isFunction(arg.toString)) {\n        var toStringResult = arg.toString();\n        if (toStringResult !== \"[object Object]\") {\n          return toStringResult;\n        }\n      }\n      return JSON.stringify(arg);\n    } catch (error) {\n      console.error(\"Error while converting argument to string\", arg, error);\n      return \"\";\n    }\n  }\n}\n\nfunction getLogLevelByValue(value) {\n  switch(value) {\n    case 10: return \"DEBUG\";\n    case 20: return \"INFO\";\n    case 30: return \"WARN\";\n    case 40: return \"ERROR\";\n    case 50: return \"ADVANCED_LOG\";\n  }\n}\n\nvar createConsoleLogger = () => {\n  var logger = new LoggerWrapper();\n  logger.debug = (...args) => console.debug.apply(window.console, [].concat(args));\n  logger.info = (...args) => console.info.apply(window.console, [].concat(args));\n  logger.warn = (...args) => console.warn.apply(window.console, [].concat(args));\n  logger.error = (...args) => console.error.apply(window.console, [].concat(args));\n  return logger;\n};\n\nexport { LogManagerImpl, Logger, LogLevel };\n","import { WEBSOCKET_RETRY_RATE_MS, MAX_WEBSOCKET_RETRY_RATE_MS } from './constants';\n\nclass RetryProvider {\n  constructor(executor, defaultRetry = WEBSOCKET_RETRY_RATE_MS) {\n    this.numAttempts = 0;\n    this.executor = executor;\n    this.hasActiveReconnection = false;\n    this.defaultRetry = defaultRetry;\n  }\n\n  retry() {\n    // Don't kickoff another reconnection attempt if we have one pending\n    if (!this.hasActiveReconnection) {\n      this.hasActiveReconnection = true;\n      setTimeout(() => {\n        this._execute();\n      }, this._getDelay());\n    }\n  }\n\n  _execute() {\n    this.hasActiveReconnection = false;\n    this.executor();\n    this.numAttempts++;\n  }\n\n  connected() {\n    this.numAttempts = 0;\n  }\n\n  _getDelay() {\n    const calculatedDelay = Math.pow(2, this.numAttempts) * this.defaultRetry;\n    return calculatedDelay <= MAX_WEBSOCKET_RETRY_RATE_MS ? calculatedDelay : MAX_WEBSOCKET_RETRY_RATE_MS;\n  }\n\n  getIsConnected() {\n    return !this.numAttempts;\n  }\n}\n\nexport { RetryProvider };","import Utils from \"./utils\";\nimport { LogManagerImpl, LogLevel, Logger } from \"./log\";\nimport {\n    MIN_WEBSOCKET_LIFETIME_MS,\n    WEBSOCKET_URL_VALID_TIME_MS,\n    HEARTBEAT_INTERVAL_MS,\n    ROUTE_KEY,\n    CONN_STATE,\n    MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS,\n    TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS,\n    MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS,\n    MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE,\n    NETWORK_CONN_CHECK_INTERVAL_MS,\n    WEBSOCKET_REINIT_JITTER,\n    LOG_MESSAGES,\n} from \"./constants\";\nimport { RetryProvider } from './retryProvider';\n\nlet logManagerInstance = null;\nconst WebSocketManager = function () {\n    const logger = logManagerInstance.getLogger({ prefix: LOG_MESSAGES.DEFAULT_PREFIX });\n\n    let online = Utils.isNetworkOnline();\n\n    let webSocket = {\n        primary: null,\n        secondary: null\n    };\n\n    let reconnectConfig = {\n        reconnectWebSocket: true,\n        websocketInitFailed: false,\n        exponentialBackOffTime: 1000,\n        exponentialTimeoutHandle: null,\n        lifeTimeTimeoutHandle: null,\n        webSocketInitCheckerTimeoutId: null,\n        connState: null\n    };\n\n    let metrics = {\n        connectWebSocketRetryCount: 0,\n        connectionAttemptStartTime: null,\n        noOpenConnectionsTimestamp: null\n    };\n\n    let heartbeatConfig = {\n        pendingResponse: false,\n        intervalHandle: null\n    };\n\n    let heartbeatPingConfig = {\n        pendingResponse: false,\n        intervalHandle: null\n    };\n\n    let callbacks = {\n        initFailure: new Set(),\n        getWebSocketTransport: null,\n        subscriptionUpdate: new Set(),\n        subscriptionFailure: new Set(),\n        topic: new Map(),\n        allMessage: new Set(),\n        connectionGain: new Set(),\n        connectionLost: new Set(),\n        connectionOpen: new Set(),\n        connectionClose: new Set()\n    };\n\n    let webSocketConfig = {\n        connConfig: null,\n        promiseHandle: null,\n        promiseCompleted: true\n    };\n\n    let topicSubscription = {\n        subscribed: new Set(),\n        pending: new Set(),\n        subscriptionHistory: new Set()\n    };\n\n    let topicSubscriptionConfig = {\n        responseCheckIntervalId: null,\n        requestCompleted: true,\n        reSubscribeIntervalId: null,\n        consecutiveFailedSubscribeAttempts: 0,\n        consecutiveNoResponseRequest: 0\n    };\n\n    const reconnectionClient = new RetryProvider(() => { getWebSocketConnConfig(); });\n\n    const invalidSendMessageRouteKeys = new Set([ROUTE_KEY.SUBSCRIBE, ROUTE_KEY.UNSUBSCRIBE, ROUTE_KEY.HEARTBEAT, ROUTE_KEY.PING]);\n\n    const networkConnectivityChecker = setInterval(function () {\n        if (online !== Utils.isNetworkOnline()) {\n            online = Utils.isNetworkOnline();\n            if (!online) {\n                logger.advancedLog(LOG_MESSAGES.NETWORK_OFFLINE);\n                sendInternalLogToServer(logger.info(LOG_MESSAGES.NETWORK_OFFLINE));\n\n                return;\n            }\n            const ws = getDefaultWebSocket();\n            if (online && (!ws || isWebSocketState(ws, WebSocket.CLOSING) || isWebSocketState(ws, WebSocket.CLOSED))) {\n                logger.advancedLog(LOG_MESSAGES.NETWORK_ONLINE);\n                sendInternalLogToServer(logger.info(LOG_MESSAGES.NETWORK_ONLINE));\n\n                getWebSocketConnConfig();\n            }\n        }\n    }, NETWORK_CONN_CHECK_INTERVAL_MS);\n\n    const invokeCallbacks = function (callbacks, response) {\n        callbacks.forEach(function (callback) {\n            try {\n                callback(response);\n            } catch (error) {\n                sendInternalLogToServer(logger.error(\"Error executing callback\", error));\n            }\n        });\n    };\n\n    const getWebSocketStates = function (ws) {\n        if (ws === null) return \"NULL\";\n        switch (ws.readyState) {\n            case WebSocket.CONNECTING:\n                return \"CONNECTING\";\n            case WebSocket.OPEN:\n                return \"OPEN\";\n            case WebSocket.CLOSING:\n                return \"CLOSING\";\n            case WebSocket.CLOSED:\n                return \"CLOSED\";\n            default:\n                return \"UNDEFINED\";\n        }\n    };\n\n    const printWebSocketState = function (event = \"\") {\n        sendInternalLogToServer(logger.debug(\"[\" + event + \"] Primary WebSocket: \" + getWebSocketStates(webSocket.primary)\n            + \" | \" + \"Secondary WebSocket: \" + getWebSocketStates(webSocket.secondary)));\n    };\n\n    const isWebSocketState = function (ws, webSocketStateCode) {\n        return ws && ws.readyState === webSocketStateCode;\n    };\n\n    const isWebSocketOpen = function (ws) {\n        return isWebSocketState(ws, WebSocket.OPEN);\n    };\n\n    const isWebSocketClosed = function (ws) {\n        // undefined check is to address the limitation of testing framework\n        return ws === null || ws.readyState === undefined || isWebSocketState(ws, WebSocket.CLOSED);\n    };\n\n    /**\n     * This function is meant to handle the scenario when we have two web-sockets open\n     * in such a scenario we always select secondary web-socket since all future operations\n     * are supposed to be done by this secondary web-socket\n     */\n    const getDefaultWebSocket = function () {\n        if (webSocket.secondary !== null) {\n            return webSocket.secondary;\n        }\n        return webSocket.primary;\n    };\n\n    const isDefaultWebSocketOpen = function () {\n        return isWebSocketOpen(getDefaultWebSocket());\n    };\n\n    const sendHeartBeat = function () {\n        if (heartbeatPingConfig.pendingResponse) {\n            logger.advancedLog(LOG_MESSAGES.NO_HEARTBEAT_PING);\n            sendInternalLogToServer(logger.warn(LOG_MESSAGES.NO_HEARTBEAT_PING));\n\n            clearInterval(heartbeatPingConfig.intervalHandle);\n            heartbeatPingConfig.pendingResponse = false;\n        }\n\n        if (heartbeatConfig.pendingResponse) {\n            logger.advancedLog(LOG_MESSAGES.NO_HEARTBEAT);\n            sendInternalLogToServer(logger.warn(LOG_MESSAGES.NO_HEARTBEAT));\n\n            clearInterval(heartbeatConfig.intervalHandle);\n            heartbeatConfig.pendingResponse = false;\n            getWebSocketConnConfig();\n            return;\n        }\n\n        if (isDefaultWebSocketOpen()) {\n            sendInternalLogToServer(logger.debug(LOG_MESSAGES.SENDING_HEARTBEAT_PING));\n            getDefaultWebSocket().send(createWebSocketPayload(ROUTE_KEY.PING));\n            heartbeatPingConfig.pendingResponse = true;\n\n            sendInternalLogToServer(logger.debug(LOG_MESSAGES.SENDING_HEARTBEAT));\n            getDefaultWebSocket().send(createWebSocketPayload(ROUTE_KEY.HEARTBEAT));\n            heartbeatConfig.pendingResponse = true;\n        } else {\n            logger.advancedLog(LOG_MESSAGES.FAILED_HEARTBEAT_PING);\n            sendInternalLogToServer(logger.warn(LOG_MESSAGES.FAILED_HEARTBEAT_PING));\n\n            logger.advancedLog(LOG_MESSAGES.FAILED_HEARTBEAT);\n            sendInternalLogToServer(logger.warn(LOG_MESSAGES.FAILED_HEARTBEAT));\n            \n            printWebSocketState(\"sendHeartBeat\");\n            getWebSocketConnConfig();\n        }\n    };\n\n    const resetWebSocketState = function () {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_RESET);\n        reconnectConfig.exponentialBackOffTime = 1000;\n        heartbeatConfig.pendingResponse = false;\n        heartbeatPingConfig.pendingResponse = false;\n        reconnectConfig.reconnectWebSocket = true;\n\n        clearTimeout(reconnectConfig.lifeTimeTimeoutHandle);\n        clearInterval(heartbeatConfig.intervalHandle);\n        clearInterval(heartbeatPingConfig.intervalHandle);\n        clearTimeout(reconnectConfig.exponentialTimeoutHandle);\n        clearTimeout(reconnectConfig.webSocketInitCheckerTimeoutId);\n    };\n\n    const resetSubscriptions = function () {\n        topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n        topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n        clearInterval(topicSubscriptionConfig.responseCheckIntervalId);\n        clearInterval(topicSubscriptionConfig.reSubscribeIntervalId);\n    };\n\n    const resetMetrics = function () {\n        metrics.connectWebSocketRetryCount = 0;\n        metrics.connectionAttemptStartTime = null;\n        metrics.noOpenConnectionsTimestamp = null;\n    };\n\n    const webSocketOnOpen = function () {\n        // Mark connection as successful; reset the number of reconnect attempts to 0.\n        reconnectionClient.connected();\n\n        try {\n            logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_ESTABLISHED);\n            sendInternalLogToServer(logger.info(LOG_MESSAGES.WEBSOCKET_CONNECTION_ESTABLISHED));\n\n            printWebSocketState(\"webSocketOnOpen\");\n            if (reconnectConfig.connState === null || reconnectConfig.connState === CONN_STATE.DISCONNECTED) {\n                invokeCallbacks(callbacks.connectionGain);\n            }\n            reconnectConfig.connState = CONN_STATE.CONNECTED;\n\n            // Report number of retries to open and record ws open time\n            const now = Date.now();\n            invokeCallbacks(callbacks.connectionOpen, {\n                connectWebSocketRetryCount: metrics.connectWebSocketRetryCount,\n                connectionAttemptStartTime: metrics.connectionAttemptStartTime,\n                noOpenConnectionsTimestamp: metrics.noOpenConnectionsTimestamp,\n                connectionEstablishedTime: now,\n                timeToConnect: now - metrics.connectionAttemptStartTime,\n                timeWithoutConnection:\n                    metrics.noOpenConnectionsTimestamp ? now - metrics.noOpenConnectionsTimestamp : null\n            });\n\n            resetMetrics();\n            resetWebSocketState();\n            getDefaultWebSocket().openTimestamp = Date.now(); // record open time\n\n            // early closure of primary web socket\n            if (topicSubscription.subscribed.size === 0 && isWebSocketOpen(webSocket.secondary)) {\n                closeSpecificWebSocket(webSocket.primary, \"[Primary WebSocket] Closing WebSocket\");\n            }\n            if (topicSubscription.subscribed.size > 0 || topicSubscription.pending.size > 0) {\n                if (isWebSocketOpen(webSocket.secondary)) {\n                    sendInternalLogToServer(logger.info(\"Subscribing secondary websocket to topics of primary websocket\"));\n                }\n                topicSubscription.subscribed.forEach(topic => {\n                    topicSubscription.subscriptionHistory.add(topic);\n                    topicSubscription.pending.add(topic);\n                });\n                topicSubscription.subscribed.clear();\n                subscribePendingTopics();\n            }\n\n            sendHeartBeat();\n            heartbeatConfig.intervalHandle = setInterval(sendHeartBeat, HEARTBEAT_INTERVAL_MS);\n\n            const webSocketLifetimeTimeout = webSocketConfig.connConfig.webSocketTransport.transportLifeTimeInSeconds * 1000;\n            sendInternalLogToServer(logger.debug(\"Scheduling WebSocket manager reconnection, after delay \" + webSocketLifetimeTimeout + \" ms\"));\n\n            reconnectConfig.lifeTimeTimeoutHandle = setTimeout(function () {\n                sendInternalLogToServer(logger.debug(\"Starting scheduled WebSocket manager reconnection\"));\n\n                getWebSocketConnConfig();\n            }, webSocketLifetimeTimeout);\n        } catch (error) {\n            sendInternalLogToServer(logger.error(\"Error after establishing WebSocket connection\", error));\n        }\n    };\n\n    const webSocketOnClose = function (event, ws) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_CLOSED, JSON.stringify(event));\n        sendInternalLogToServer(logger.info(LOG_MESSAGES.WEBSOCKET_CONNECTION_CLOSED, JSON.stringify(event)));\n\n        printWebSocketState(\"webSocketOnClose before-cleanup\");\n\n        invokeCallbacks(callbacks.connectionClose, {\n            openTimestamp: ws.openTimestamp,\n            closeTimestamp: Date.now(),\n            connectionDuration: Date.now() - ws.openTimestamp,\n            code: event.code,\n            reason: event.reason\n        });\n\n        if (isWebSocketClosed(webSocket.primary)) {\n            webSocket.primary = null;\n        }\n        if (isWebSocketClosed(webSocket.secondary)) {\n            webSocket.secondary = null;\n        }\n        if (!reconnectConfig.reconnectWebSocket) {\n            return;\n        }\n        if (!isWebSocketOpen(webSocket.primary) && !isWebSocketOpen(webSocket.secondary)) {\n            sendInternalLogToServer(logger.warn(\"Neither primary websocket and nor secondary websocket have open connections, attempting to re-establish connection\"));\n\n            if (reconnectConfig.connState === CONN_STATE.DISCONNECTED) {\n                /**\n                 * This check is required in the scenario where WS Server shuts-down and closes all active\n                 * WS Client connections and WS Server takes about a minute to become active again, in this\n                 * scenario WS Client's onClose is triggered and then WSM start reconnect logic immediately but all\n                 * connect request to WS Server would fail and WS Client's onError callback would be triggered\n                 * followed WS Client's onClose callback and hence \"connectionLost\" callback would be invoked several\n                 * times and this behavior is redundant\n                 */\n                sendInternalLogToServer(logger.info(\"Ignoring connectionLost callback invocation\"));\n            } else {\n                invokeCallbacks(callbacks.connectionLost, {\n                    openTimestamp: ws.openTimestamp,\n                    closeTimestamp: Date.now(),\n                    connectionDuration: Date.now() - ws.openTimestamp,\n                    code: event.code,\n                    reason: event.reason\n                });\n                metrics.noOpenConnectionsTimestamp = Date.now();\n            }\n            reconnectConfig.connState = CONN_STATE.DISCONNECTED;\n            getWebSocketConnConfig();\n        } else if (isWebSocketClosed(webSocket.primary) && isWebSocketOpen(webSocket.secondary)) {\n            sendInternalLogToServer(logger.info(\"[Primary] WebSocket Cleanly Closed\"));\n\n            webSocket.primary = webSocket.secondary;\n            webSocket.secondary = null;\n        }\n        printWebSocketState(\"webSocketOnClose after-cleanup\");\n    };\n\n    const webSocketOnError = function (event) {\n        printWebSocketState(\"webSocketOnError\");\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_ERROR, JSON.stringify(event));\n        sendInternalLogToServer(logger.error(LOG_MESSAGES.WEBSOCKET_CONNECTION_ERROR, JSON.stringify(event)));\n        const isConnected = reconnectionClient.getIsConnected();\n\n        if (isConnected) {\n            getWebSocketConnConfig();\n        } else {\n            reconnectionClient.retry();\n        }\n    };\n\n    const webSocketOnMessage = function (event) {\n        const response = JSON.parse(event.data);\n\n        switch (response.topic) {\n\n            case ROUTE_KEY.SUBSCRIBE: {\n                sendInternalLogToServer(logger.debug(\"Subscription Message received from webSocket server\", event.data));\n\n                topicSubscriptionConfig.requestCompleted = true;\n                topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n\n                if (response.content.status === \"success\") {\n                    topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n                    response.content.topics.forEach(topicName => {\n                        topicSubscription.subscriptionHistory.delete(topicName);\n                        topicSubscription.pending.delete(topicName);\n                        topicSubscription.subscribed.add(topicName);\n                    });\n                    if (topicSubscription.subscriptionHistory.size === 0) {\n                        if (isWebSocketOpen(webSocket.secondary)) {\n                            sendInternalLogToServer(logger.info(\"Successfully subscribed secondary websocket to all topics of primary websocket\"));\n\n                            closeSpecificWebSocket(webSocket.primary, \"[Primary WebSocket] Closing WebSocket\");\n                        }\n                    } else {\n                        subscribePendingTopics();\n                    }\n                    invokeCallbacks(callbacks.subscriptionUpdate, response);\n\n                } else {\n                    clearInterval(topicSubscriptionConfig.reSubscribeIntervalId);\n                    ++topicSubscriptionConfig.consecutiveFailedSubscribeAttempts;\n                    if (topicSubscriptionConfig.consecutiveFailedSubscribeAttempts === MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS) {\n                        invokeCallbacks(callbacks.subscriptionFailure, response);\n                        topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n                        return;\n                    }\n                    topicSubscriptionConfig.reSubscribeIntervalId = setInterval(function () {\n                        subscribePendingTopics();\n                    }, TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS);\n                }\n                break;\n            }\n            case ROUTE_KEY.HEARTBEAT: {\n                sendInternalLogToServer(logger.debug(LOG_MESSAGES.HEARTBEAT_RECEIVED));\n\n                heartbeatConfig.pendingResponse = false;\n                break;\n            }\n            case ROUTE_KEY.PING: {\n                sendInternalLogToServer(logger.debug(LOG_MESSAGES.HEARTBEAT_RECEIVED_PING));\n\n                heartbeatPingConfig.pendingResponse = false;\n                break;\n            }\n            default: {\n                if (response.topic) {\n                    logger.advancedLog(LOG_MESSAGES.WEBSOCKET_MESSAGE_RECEIVED, response.topic);\n                    sendInternalLogToServer(logger.debug(LOG_MESSAGES.WEBSOCKET_MESSAGE_RECEIVED + response.topic));\n\n                    if (isWebSocketOpen(webSocket.primary) && isWebSocketOpen(webSocket.secondary)\n                        && topicSubscription.subscriptionHistory.size === 0 && this === webSocket.primary) {\n                        /**\n                         * This block is to handle scenario when both primary and secondary socket have subscribed to\n                         * a common topic but we are facing difficulty in closing the primary socket, then in this\n                         * situation messages will be received by both primary and secondary web socket\n                         */\n                        sendInternalLogToServer(logger.warn(\"Ignoring Message for Topic \" + response.topic + \", to avoid duplicates\"));\n\n                        return;\n                    }\n\n                    if (callbacks.allMessage.size === 0 && callbacks.topic.size === 0) {\n                        sendInternalLogToServer(logger.warn('No registered callback listener for Topic', response.topic));\n\n                        return;\n                    }\n                    logger.advancedLog(LOG_MESSAGES.WEBSOCKET_MESSAGE_SUCCESS, response.topic);\n                    invokeCallbacks(callbacks.allMessage, response);\n                    if (callbacks.topic.has(response.topic)) {\n                        invokeCallbacks(callbacks.topic.get(response.topic), response);\n                    }\n\n                } else if (response.message) {\n                    logger.advancedLog(LOG_MESSAGES.WEBSOCKET_MESSAGE_ERROR, response);\n                    sendInternalLogToServer(logger.warn(LOG_MESSAGES.WEBSOCKET_MESSAGE_ERROR, response));\n                } else {\n                    logger.advancedLog(LOG_MESSAGES.WEBSOCKET_MESSAGE_INVALID, response);\n                    sendInternalLogToServer(logger.warn(LOG_MESSAGES.WEBSOCKET_MESSAGE_INVALID, response));\n                }\n            }\n        }\n    };\n\n    const subscribePendingTopics = function () {\n        if (topicSubscriptionConfig.consecutiveNoResponseRequest > MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE) {\n            sendInternalLogToServer(logger.warn(\"Ignoring subscribePendingTopics since we have exhausted max subscription retries with no response\"));\n\n            invokeCallbacks(callbacks.subscriptionFailure, Utils.getSubscriptionResponse(ROUTE_KEY.SUBSCRIBE, false, Array.from(topicSubscription.pending)));\n            return;\n        }\n        if (!isDefaultWebSocketOpen()) {\n            sendInternalLogToServer(logger.warn(\"Ignoring subscribePendingTopics call since Default WebSocket is not open\"));\n\n            return;\n        }\n        if (Array.from(topicSubscription.pending).length === 0) {\n            return;\n        }\n\n        clearInterval(topicSubscriptionConfig.responseCheckIntervalId);\n\n        getDefaultWebSocket().send(createWebSocketPayload(ROUTE_KEY.SUBSCRIBE, {\n            \"topics\": Array.from(topicSubscription.pending)\n        }));\n        topicSubscriptionConfig.requestCompleted = false;\n\n        // This callback ensure that some response was received for subscription request\n        topicSubscriptionConfig.responseCheckIntervalId = setInterval(function () {\n            if (!topicSubscriptionConfig.requestCompleted) {\n                ++topicSubscriptionConfig.consecutiveNoResponseRequest;\n                subscribePendingTopics();\n            }\n        }, MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS);\n    };\n\n    const closeSpecificWebSocket = function (ws, reason) {\n        if (isWebSocketState(ws, WebSocket.CONNECTING) || isWebSocketState(ws, WebSocket.OPEN)) {\n            ws.close(1000, reason);\n        } else {\n            sendInternalLogToServer(logger.warn(\"Ignoring WebSocket Close request, WebSocket State: \" + getWebSocketStates(ws)));\n        }\n    };\n\n    const closeWebSocket = function (reason) {\n        closeSpecificWebSocket(webSocket.primary, \"[Primary] WebSocket \" + reason);\n        closeSpecificWebSocket(webSocket.secondary, \"[Secondary] WebSocket \" + reason);\n    };\n\n    const retryWebSocketInitialization = function () {\n        metrics.connectWebSocketRetryCount++;\n        const waitTime = Utils.addJitter(reconnectConfig.exponentialBackOffTime, WEBSOCKET_REINIT_JITTER);\n        if (Date.now() + waitTime <= webSocketConfig.connConfig.urlConnValidTime) {\n            logger.advancedLog(LOG_MESSAGES.WEBSOCKET_REINITIALIZATION);\n            sendInternalLogToServer(logger.debug(LOG_MESSAGES.WEBSOCKET_REINITIALIZATION + waitTime + \" ms\"));\n\n            reconnectConfig.exponentialTimeoutHandle = setTimeout(() => initWebSocket(), waitTime);\n            reconnectConfig.exponentialBackOffTime *= 2;\n        } else {\n            logger.advancedLog(LOG_MESSAGES.WEBSOCKET_REINITIALIZATION_TIMEOUT);\n            sendInternalLogToServer(logger.warn(LOG_MESSAGES.WEBSOCKET_REINITIALIZATION_TIMEOUT));\n\n            getWebSocketConnConfig();\n        }\n    };\n\n    const terminateWebSocketManager = function (response) {\n        resetWebSocketState();\n        resetSubscriptions();\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_INITIALIZATION_FAILED, response);\n        sendInternalLogToServer(logger.error(LOG_MESSAGES.WEBSOCKET_INITIALIZATION_FAILED));\n\n        reconnectConfig.websocketInitFailed = true;\n        closeWebSocket(LOG_MESSAGES.WEBSOCKET_TERMINATED);\n        clearInterval(networkConnectivityChecker);\n        invokeCallbacks(callbacks.initFailure, {\n            connectWebSocketRetryCount: metrics.connectWebSocketRetryCount,\n            connectionAttemptStartTime: metrics.connectionAttemptStartTime,\n            reason: response\n        });\n        resetMetrics();\n    };\n\n    const createWebSocketPayload = function (key, content) {\n        return JSON.stringify({\n            \"topic\": key,\n            \"content\": content\n        });\n    };\n\n    const sendMessage = function (payload) {\n        Utils.assertIsObject(payload, \"payload\");\n        if (payload.topic === undefined || invalidSendMessageRouteKeys.has(payload.topic)) {\n            sendInternalLogToServer(logger.warn(\"Cannot send message, Invalid topic\", payload));\n\n            return;\n        }\n        try {\n            payload = JSON.stringify(payload);\n        } catch (error) {\n            sendInternalLogToServer(logger.warn(\"Error stringify message\", payload));\n\n            return;\n        }\n        if (isDefaultWebSocketOpen()) {\n            getDefaultWebSocket().send(payload);\n        } else {\n            sendInternalLogToServer(logger.warn(\"Cannot send message, web socket connection is not open\"));\n        }\n    };\n\n    const subscribeTopics = function (topics) {\n        Utils.assertNotNull(topics, 'topics');\n        Utils.assertIsList(topics);\n\n        topics.forEach(topic => {\n            if (!topicSubscription.subscribed.has(topic)) {\n                topicSubscription.pending.add(topic);\n            }\n        });\n        // This ensure all participant-request to subscribe to topic chat are served at least once\n        topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n        subscribePendingTopics();\n    };\n\n    const validWebSocketConnConfig = function (connConfig) {\n        if (Utils.isObject(connConfig) && Utils.isObject(connConfig.webSocketTransport)\n            && Utils.isNonEmptyString(connConfig.webSocketTransport.url)\n            && Utils.validWSUrl(connConfig.webSocketTransport.url) &&\n            connConfig.webSocketTransport.transportLifeTimeInSeconds * 1000 >= MIN_WEBSOCKET_LIFETIME_MS) {\n            return true;\n        }\n        sendInternalLogToServer(logger.error(\"Invalid WebSocket Connection Configuration\", connConfig));\n\n        return false;\n    };\n\n    const getWebSocketConnConfig = function () {\n        if (!Utils.isNetworkOnline()) {\n            logger.advancedLog(LOG_MESSAGES.NETWORK_OFFLINE_WARNING);\n            sendInternalLogToServer(logger.info(LOG_MESSAGES.NETWORK_OFFLINE_WARNING));\n\n            return;\n        }\n        if (reconnectConfig.websocketInitFailed) {\n            sendInternalLogToServer(logger.debug(\"WebSocket Init had failed, ignoring this getWebSocketConnConfig request\"));\n            return;\n        }\n        if (!webSocketConfig.promiseCompleted) {\n            sendInternalLogToServer(logger.debug(\"There is an ongoing getWebSocketConnConfig request, this request will be ignored\"));\n            return;\n        }\n        resetWebSocketState();\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_NEW_CONNECTION);\n        sendInternalLogToServer(logger.info(LOG_MESSAGES.WEBSOCKET_NEW_CONNECTION));\n\n        metrics.connectionAttemptStartTime = metrics.connectionAttemptStartTime || Date.now();\n        webSocketConfig.promiseCompleted = false;\n        webSocketConfig.promiseHandle = callbacks.getWebSocketTransport();\n        return webSocketConfig.promiseHandle\n            .then(function (response) {\n                webSocketConfig.promiseCompleted = true;\n                logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_SUCCESS);\n                sendInternalLogToServer(logger.debug(LOG_MESSAGES.WEBSOCKET_CONNECTION_SUCCESS, response));\n\n                if (!validWebSocketConnConfig(response)) {\n                    terminateWebSocketManager(\"Invalid WebSocket connection configuration: \" + response);\n                    return { webSocketConnectionFailed: true };\n                }\n                webSocketConfig.connConfig = response;\n                // Ideally this URL validity time should be provided by server\n                webSocketConfig.connConfig.urlConnValidTime = Date.now() + WEBSOCKET_URL_VALID_TIME_MS;\n                return initWebSocket();\n            },\n                function (reason) {\n                    webSocketConfig.promiseCompleted = true;\n                    logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_FAILURE);\n                    sendInternalLogToServer(logger.error(LOG_MESSAGES.WEBSOCKET_CONNECTION_FAILURE, reason));\n\n                    // If our connection fails because of network failure, we want to retry\n                    if (Utils.isNetworkFailure(reason)) {\n                        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_RETRY + JSON.stringify(reason));\n                        sendInternalLogToServer(logger.info(LOG_MESSAGES.WEBSOCKET_CONNECTION_RETRY + JSON.stringify(reason)));\n                        reconnectionClient.retry();\n                    } else {\n                        // If we're not going to retry, we should terminate WSM\n                        terminateWebSocketManager(\"Failed to fetch webSocket connection configuration: \" + JSON.stringify(reason));\n                    }\n                    return { webSocketConnectionFailed: true };\n                });\n    };\n\n    const initWebSocket = function () {\n        if (reconnectConfig.websocketInitFailed) {\n            sendInternalLogToServer(logger.info(\"web-socket initializing had failed, aborting re-init\"));\n\n            return { webSocketConnectionFailed: true };\n        }\n        if (!Utils.isNetworkOnline()) {\n            sendInternalLogToServer(logger.warn(\"System is offline aborting web-socket init\"));\n\n            return { webSocketConnectionFailed: true };\n        }\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_INIT);\n        sendInternalLogToServer(logger.info(LOG_MESSAGES.WEBSOCKET_INIT));\n\n        printWebSocketState(\"initWebSocket\");\n        try {\n            if (validWebSocketConnConfig(webSocketConfig.connConfig)) {\n                let ws = null;\n                if (isWebSocketOpen(webSocket.primary)) {\n                    sendInternalLogToServer(logger.debug(\"Primary Socket connection is already open\"));\n\n                    if (!isWebSocketState(webSocket.secondary, WebSocket.CONNECTING)) {\n                        sendInternalLogToServer(logger.debug(\"Establishing a secondary web-socket connection\"));\n                        reconnectionClient.numAttempts = 0;\n                        webSocket.secondary = getNewWebSocket();\n                    }\n                    ws = webSocket.secondary;\n                } else {\n                    if (!isWebSocketState(webSocket.primary, WebSocket.CONNECTING)) {\n                        sendInternalLogToServer(logger.debug(\"Establishing a primary web-socket connection\"));\n\n                        webSocket.primary = getNewWebSocket();\n                    }\n                    ws = webSocket.primary;\n                }\n\n                // WebSocket creation is async task hence we Wait for 1sec before any potential retry\n                reconnectConfig.webSocketInitCheckerTimeoutId = setTimeout(function () {\n                    if (!isWebSocketOpen(ws)) {\n                        retryWebSocketInitialization();\n                    }\n                }, 1000);\n                return { webSocketConnectionFailed: false };\n            }\n        } catch (error) {\n            sendInternalLogToServer(logger.error(\"Error Initializing web-socket-manager\", error));\n\n            terminateWebSocketManager(\"Failed to initialize new WebSocket: \" + error.message);\n            return { webSocketConnectionFailed: true };\n        }\n    };\n\n    const getNewWebSocket = function () {\n        let ws = new WebSocket(webSocketConfig.connConfig.webSocketTransport.url);\n        ws.addEventListener(\"open\", webSocketOnOpen);\n        ws.addEventListener(\"message\", webSocketOnMessage);\n        ws.addEventListener(\"error\", webSocketOnError);\n        ws.addEventListener(\"close\", event => webSocketOnClose(event, ws));\n        return ws;\n    };\n\n    const onConnectionOpen = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_OPEN);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionOpen.add(cb);\n        return () => callbacks.connectionOpen.delete(cb);\n    };\n\n    const onConnectionClose = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_CLOSE);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionClose.add(cb);\n        return () => callbacks.connectionClose.delete(cb);\n    };\n\n    const onConnectionGain = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_GAIN);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionGain.add(cb);\n        if (isDefaultWebSocketOpen()) {\n            cb();\n        }\n        return () => callbacks.connectionGain.delete(cb);\n    };\n\n    const onConnectionLost = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_CONNECTION_LOST);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionLost.add(cb);\n        if (reconnectConfig.connState === CONN_STATE.DISCONNECTED) {\n            cb();\n        }\n        return () => callbacks.connectionLost.delete(cb);\n    };\n\n    const onInitFailure = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_INIT_FAILURE);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.initFailure.add(cb);\n        if (reconnectConfig.websocketInitFailed) {\n            cb();\n        }\n        return () => callbacks.initFailure.delete(cb);\n    };\n\n    const init = function (transportHandle) {\n        Utils.assertTrue(Utils.isFunction(transportHandle), 'transportHandle must be a function');\n        if (callbacks.getWebSocketTransport !== null) {\n            sendInternalLogToServer(logger.warn(\"Web Socket Manager was already initialized\"));\n            return;\n        }\n        callbacks.getWebSocketTransport = transportHandle;\n\n        return getWebSocketConnConfig();\n    };\n\n    const onSubscriptionUpdate = function (cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.subscriptionUpdate.add(cb);\n        return () => callbacks.subscriptionUpdate.delete(cb);\n    };\n\n    const onSubscriptionFailure = function (cb) {\n        logger.advancedLog(LOG_MESSAGES.WEBSOCKET_SUBSCRIPTION_FAILURE);\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.subscriptionFailure.add(cb);\n        return () => callbacks.subscriptionFailure.delete(cb);\n    };\n\n    const onMessage = function (topicName, cb) {\n        Utils.assertNotNull(topicName, 'topicName');\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        if (callbacks.topic.has(topicName)) {\n            callbacks.topic.get(topicName).add(cb);\n        } else {\n            callbacks.topic.set(topicName, new Set([cb]));\n        }\n        return () => callbacks.topic.get(topicName).delete(cb);\n    };\n\n    const onAllMessage = function (cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.allMessage.add(cb);\n        return () => callbacks.allMessage.delete(cb);\n    };\n\n    const sendInternalLogToServer = function (logEntry) {\n        if (logEntry && typeof logEntry.sendInternalLogToServer === \"function\")\n            logEntry.sendInternalLogToServer();\n\n        return logEntry;\n    };\n\n    this.init = init;\n    this.onInitFailure = onInitFailure;\n    this.onConnectionOpen = onConnectionOpen;\n    this.onConnectionClose = onConnectionClose;\n    this.onConnectionGain = onConnectionGain;\n    this.onConnectionLost = onConnectionLost;\n    this.onSubscriptionUpdate = onSubscriptionUpdate;\n    this.onSubscriptionFailure = onSubscriptionFailure;\n    this.onMessage = onMessage;\n    this.onAllMessage = onAllMessage;\n    this.subscribeTopics = subscribeTopics;\n    this.sendMessage = sendMessage;\n\n    this.closeWebSocket = function () {\n        resetWebSocketState();\n        resetSubscriptions();\n        reconnectConfig.reconnectWebSocket = false;\n        clearInterval(networkConnectivityChecker);\n        closeWebSocket(\"User request to close WebSocket\");\n    };\n\n    this.terminateWebSocketManager = terminateWebSocketManager;\n};\n\nconst WebSocketManagerConstructor = (logMetaData) => {\n    if (!logManagerInstance) {\n        logManagerInstance = new LogManagerImpl(logMetaData);\n    }\n    if (!logManagerInstance.hasLogMetaData()) {\n        logManagerInstance.setLogMetaData(logMetaData);\n    }\n    if (!logMetaData) {\n        console.info(\"********Missing metaData for logs from websocketManager: initialize websocketManager using create(metaData)*******\");\n    }\n    return new WebSocketManager();\n};\n\nconst setGlobalConfig = config => {\n    const loggerConfig = config && config.loggerConfig;\n    if (!logManagerInstance) {\n        logManagerInstance = new LogManagerImpl();\n    }\n    logManagerInstance.updateLoggerConfig(loggerConfig);\n};\n\nconst WebSocketManagerObject = {\n    create: WebSocketManagerConstructor,\n    setGlobalConfig: setGlobalConfig,\n    LogLevel: LogLevel,\n    Logger: Logger,\n};\n\nexport { WebSocketManagerObject };\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*eslint no-unused-vars: \"off\"*/\nimport { WebSocketManagerObject } from \"./webSocketManager\";\n\nglobal.connect = global.connect || {};\nconnect.WebSocketManager = WebSocketManagerObject;\n\nexport const WebSocketManager = WebSocketManagerObject;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}